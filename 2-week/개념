
순서

1. 그래프 이론 기초
2. 트리
3. 이진트리와 이진탐색트리
4. 인접행렬, 인접 리스트
5. 맵과 방향벡터
6. 연결된 컴포넌트
7. 깊이 우선 탐색 (DFS, Depth First Serach)
8. 너비 우선 탐색 (BFS, Breadth Frist Search)


**그래프 이론 기초**

  정점과 간선

  정점(vertex)은 노드라고도 불리며 그래프를 형성하는 기본 단위.
  정점은 분할 할 수 없는 객체이자 점으로 표현되는 위치, 사람, 물건 등으로 정의됨

  간선(edge)은 정점을 잇는 선을 의미. 관계, 경로 등으로 정의됨

  정점을 기준으로 나가는 간선은 outdegree 들어오는 간선은 indegree 라고 간다.
  그리고 간선에 드는 비용을 가중치라고 한다.

**트리**
  
  자식 노드와 부모노드로 이루어진 계층적인 구조이며 사이클이 없는 구조를 의미한다. 
  트리는 그래프의 일종이며 다음과 같은 특징이 있다.
  1. 부모, 자식 계층 구조
  2. V(vertex) - 1 = E(edge). 간선 수는 노드(정점) 수 - 1
  3. 임의의 두 노드 사이의 경로는 유일무이하게 존재한다. 
      즉 트리 내의 어떤 노드와 어떤 노드까지의 경로는
      반드시 있으며 하나밖에 없다. 

  ***노드***
    가장 최상위 노드를 루트노드라고 부른다.
    중간 자식 노드를 내부로드라고 부른다.
    자식이 없는 노드를 리프노트라고 부른다. 

  깊이 : 트리에서 깊이는 각각의 노드마다 다르며 루트노드에서 특정노드까지 최단 거리로 갔을 때의 거리.
  높이 : 트리의 높이는 루트 노드부터 리프 노트까지의 거리 중 가장 긴 거리를 의미.
  레벨 : 트리의 레벨은 보통 깊이와 같은 의미.

  
**이진트리**

  이진트리 종류

  - 정이진 트리 (full binary tree) : 자식 노드가 0또는 2개인 이진트리
  - 변질 이진 트리(degenerate binary tree) : 자식 노드가 하나밖에 없는 이진트리
  - 균형 이진 트리 (balanced binary tree) : 모든 노드의 왼쪽 하위트리와 오른쪽 하위트리의 차이가 1 이하인 트리.
        map, set을 구성하는 레드블랙 트리가 균형이진트리 중 하나.

**이진탐색트리(BST)**

  이진탐색트리은 이진트리의 일종으로 노드의 오른쪽 하위 트리에는 노드의 값보다 큰 값이 있는 노드만 포함하고
  왼쪽 하위트리에는 노드의 값보다 작은값이 들어있는 트리를 말한다. 
  이렇게 하면 전체탐색을 하지 않아도 되기 때문에 검색하기에 유리. 


**인접행렬**

  컴퓨터에게 그래프를 표현할 때 2가지 방법이 있는데 그 중 하나가 인접행렬이고 나머지가 인접 리스트이다. 

  그 중 인접행렬이란 정점과 간선의 관계를 나타내는 bool 타입의 정사각형 행렬을 의미. 
  정사각형 행렬의 각 요소가 0 또는 1이라는 값을 가짐. 0은 두 정점 사이에 경로가 없음을 의미하며,
  1은 두 정점 사이에 경로가 있음을 의미한다.

  행렬을 코드로 탐색할 때는 y축을 중심으로 x를 탐색하는 반복문을 만들자.
  

